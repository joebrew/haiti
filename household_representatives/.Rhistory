sum(old[,paste0(day,"1c")][which(old[,paste0(day,1)] <= minutes)])
}
Fun("wed", 120)
Fun("wed", 60)
Fun("tue", 60)
Fun("mon", 60)
Fun("tji", 60)
Fun("thu", 60)
Fun("thu", 120)
day <- c("mon", "tue", "wed", "thu", "fri")
ts <- data.frame(day)
#########
# CREATE COLUMNS FOR TIME OPTIONS
#########
for (i in c(30,60,90,120)){
ts[,paste0("x",i)] <- NA
}
for (i in ts$day){
for (j in c(30,60,90,120)){
ts[which(ts$day == i), paste0("x", i)] <-
Fun(i, j)
}
}
ts
day <- c("mon", "tue", "wed", "thu", "fri")
ts <- data.frame(day)
#########
# CREATE COLUMNS FOR TIME OPTIONS
#########
for (i in c(30,60,90,120)){
ts[,paste0("x",i)] <- NA
}
########
# LOOP TO GET CHARGED MINUTES FOR EACH DAY / TIME
########
for (i in ts$day){
for (j in c(30,60,90,120)){
ts[which(ts$day == i), paste0("x", j)] <-
Fun(i, j)
}
}
ts
Hourfy <- function(x){x/60}
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*10
expense <- Hourfy(j)*10
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <-
}
}
Hourfy <- function(x){x/60}
for (i in c(30,60,90,120)){
ts[,paste0("roi",i)] <- NA
}
ts
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*10
expense <- Hourfy(j)*10
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <-
}
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*10
expense <- Hourfy(j)*10
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts\
ts
ts2 <- ts[, grepl("roi", colnames(ts))]
ts2
ts2 <- ts[, grepl("roi|day", colnames(ts))]
ts2
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
teacherPay <- 12
studentCost <- 10
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
apply(ts2, 2, function(sum))
apply(ts2, 2, sum
)
apply(ts2, 2, function(x){sum(x)})
str(ts2)
apply(ts2[,-1], 2, function(x){sum(x)})
12*4*.5
12*4*1
12*4*1.5
12*4*2
96-12
84*4
ts2
teacherPay <- 12
studentCost <- 5
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
teacherPay <- 12
studentCost <- 8
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
barplot(ts2)
barplot(ts2[,"3:30"])
barplot(ts2[which(ts$day == "mon"),])
barplot(ts2[which(ts$day == "mon"),1:4])
barplot(ts2[which(ts$day == "mon"),2:5])
ts2[which(ts$day == "mon"),2:5]
barplot(as.numeric(ts2[which(ts$day == "mon"),2:5]))
PlotFun <- function(day){
barplot(as.numeric(ts2[which(ts$day == day),2:5]))
}
par(mfrow=c(5,1))
for (i in days){
PlotFun(i)
}
par(mfrow=c(5,1))
for (i in days){
PlotFun(i)
}
PlotFun <- function(day){
barplot(as.numeric(ts2[which(ts$day == day),2:5]),
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
}
par(mfrow=c(5,1))
for (i in days){
PlotFun(i)
}
PlotFun <- function(day){
barplot(as.numeric(ts2[which(ts$day == day),2:5]),
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
abline(h=0)
}
par(mfrow=c(5,1))
for (i in days){
PlotFun(i)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
PlotFun <- function(day){
bp <- barplot(as.numeric(ts2[which(ts$day == day),2:5]),
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
text(bp[,1],
y = 1,
as.numeric(ts2[which(ts$day == day),2:5]))
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
PlotFun <- function(day){
bp <- barplot(as.numeric(ts2[which(ts$day == day),2:5]),
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
text(bp[,1],
y = as.numeric(ts2[which(ts$day == day),2:5]),
pos = 3,
as.numeric(ts2[which(ts$day == day),2:5]))
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
####
PlotFun <- function(day){
bp <- barplot(as.numeric(ts2[which(ts$day == day),2:5]),
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
text(bp[,1],
y = as.numeric(ts2[which(ts$day == day),2:5]),
pos = 1,
as.numeric(ts2[which(ts$day == day),2:5]))
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
PlotFun <- function(day){
num <- as.numeric(ts2[which(ts$day == day),2:5])
bp <- barplot(num,
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
text(bp[,1],
y = num,
pos = 1,
labels= num)
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
teacherPay <- 12
studentCost <- 7
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
PlotFun <- function(day){
num <- as.numeric(ts2[which(ts$day == day),2:5])
bp <- barplot(num,
main = day,
names.arg= c("3:30", "4:00", "4:30", "5:00"))
text(bp[,1],
y = num,
pos = 1,
labels= num)
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
teacherPay <- 12
studentCost <- 7
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
PlotFun <- function(day){
num <- as.numeric(ts2[which(ts$day == day),2:5])
bp <- barplot(num,
names.arg= c("3:30", "4:00", "4:30", "5:00"),
xlab = day)
text(bp[,1],
y = num,
pos = ifelse(num > 0,1,3),
labels= num)
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(3,2,1,1))
for (i in days){
PlotFun(i)
}
########
teacherPay <- 12
studentCost <- 7
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
PlotFun <- function(day){
num <- as.numeric(ts2[which(ts$day == day),2:5])
bp <- barplot(num,
names.arg= c("3:30", "4:00", "4:30", "5:00"),
xlab = day)
text(bp[,1],
y = num,
pos = ifelse(num > 0,1,3),
labels= num)
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(4,2,1,1))
for (i in days){
PlotFun(i)
}
########
#
teacherPay <- 12
studentCost <- 7
for (i in ts$day){
for (j in c(30,60,90,120)){
income <- Hourfy(ts[which(ts$day == i),paste0("x", j)])*studentCost
expense <- Hourfy(j)*teacherPay
roi <- income - expense
ts[which(ts$day == i), paste0("roi", j)] <- roi
}
}
ts2 <- ts[, grepl("roi|day", colnames(ts))]
colnames(ts2) <- c("day", "3:30", "4:00", "4:30", "5:00")
ts2
PlotFun <- function(day){
num <- as.numeric(ts2[which(ts$day == day),2:5])
bp <- barplot(num,
names.arg= c("3:30", "4:00", "4:30", "5:00"),
ylab = day)
text(bp[,1],
y = num,
pos = ifelse(num > 0,1,3),
labels= num)
abline(h=0)
}
par(mfrow=c(5,1))
par(mar=c(4,4,1,1))
for (i in days){
PlotFun(i)
}
########
conception <- as.Date("2014-08-14", format = "%Y-%m-%d")
regla <- as.Date("2014-08-14", format = "%Y-%m-%d")
due <- as.Date("2015-05-21", format = "%Y-%m-%d")
conception <- as.Date("2014-08-28", format = "%Y-%m-%d")
due - regla
due - regla / 7
as.numeric(due - regla) / 7
as.numeric(due - conception) / 7
p <- read.csv("C:/Users/BrewJR/Desktop/pregnancy_calendar.csv")
head(p)
p$date <- as.Date(p$Start.Date, format = "%m/%d/%Y")
head(p)
10/7
10 %/% 7
13 %/% 7
14 %/% 7
p$days <-
as.numeric(p$date - p$date[1])
head(p)
p$weeks <-
7 %/% p$days
head(p)
p$weeks <-
p$days %/% 7
head(p)
20 %% 7
p$edays <-
p$days %% 7
head(p)
head(p, nrows=20)
head(p, nrow=20)
head(p, rows=20)
View(p)
p$Subject <- paste0(
p$weeks,
" weeks and ",
p$edays,
" days"
)
head(p)
p$Subject
as.data.frame(p$Subject)
View(p)
280/3
write.csv(p, "C:/Users/BrewJR/Desktop/pCal.csv")
2+2
plot(1:10, (1:10^2))
plot(1:10, (1:10)^2)
plot(1:10, (1:10)^2, type = "l")
plot(sqrt(1:100), 200:299, pch=16, col = adjustcolor("darkgreen", alpha.f=0.6))
plot(sqrt(1:100), 200:299, pch=16, col = adjustcolor("darkgreen", alpha.f=0.6), cex = seq(0,3, length = 100))
plot(sqrt(1:100), 200:299, pch=16, col = adjustcolor("darkgreen", alpha.f=0.6), cex = seq(0,5, length = 100))
barplot(1:10)
barplot(1:10, main = "yo")
barplot(1:10, main = "yo", col = "red")
barplot(1:10, main = "yo", col = "red", border = "green")
barplot(1:10, main = "yo", col = "red", border = FALSE)
barplot(1:10, main = "yo", col = "red", border = FALSE, xlab = "These are bars")
barplot(1:10, main = "yo", col = "red", border = FALSE, xlab = "These are bars", ylab = "These are numbers")
barplot(1:10, main = "yo", col = c("red", "blue"), border = FALSE, xlab = "These are bars", ylab = "These are numbers")
barplot(1:10, main = "yo", col = c("red", "blue", "green"), border = FALSE, xlab = "These are bars", ylab = "These are numbers")
mycolors <- "red"
barplot(1:5, col = mycolors)
mycolors <- c("red", "red", "red", "green", "red")
barplot(1:5, col = mycolors)
mycolors <- c("red", "blue")
barplot(1:5, col = mycolors)
plot(1:10, 1:10, pch=15)
people <- c("joe", "jon", "frank", "leslie", "pat", "cat", "dan", "sue", "juan")
age <- c(30, 20, 15, 100, 87, 93, 41, 19 26)
age <- c(30, 20, 15, 100, 87, 93, 41, 19 26)
age <- c(30, 20, 15, 100, 87, 93, 41, 19, 26)
money <- c(60, 40, 20 ,81, 72, 135, 50, 35, 6)
data.frame(people, age, money)
remove.packages("dplyr")
install.packages("dplyr")
# Function to generate one random number between 1 and household size (input)
RandomFun <- function(hh_size = 7){
myvec <- vector(length = hh_size, mode = "numeric")
for (i in 1:7){
possibs <- 1:i
myvec[i] <-
sample(x = possibs,
size = 1,
replace = FALSE)
}
return(myvec)
# Travis' suggestion:
# sapply(1:hh_size, function(x) sample(x, size=1, replace=FALSE))
}
# Create dataframe
mydf <- data.frame("hh_number" = 1:3000)
# Generate columns for each possible household size
for (i in 1:7){
mydf[,paste0("hh_size_", i)] <- NA
}
# Populate dataframe with random sequence for each house
for (i in 1:nrow(mydf)){
mydf[i,2:8] <- RandomFun()
}
# Validate to make sure we got a good draw
# (ie, no draws larger than household size, and equal distributions)
# First, define function for calculating confidence interval on proportion:
simpasym <- function(n, p, z=1.96, cc=TRUE){
out <- list()
if(cc){
out$lb <- p - z*sqrt((p*(1-p))/n) - 0.5/n
out$ub <- p + z*sqrt((p*(1-p))/n) + 0.5/n
} else {
out$lb <- p - z*sqrt((p*(1-p))/n)
out$ub <- p + z*sqrt((p*(1-p))/n)
}
out
}
# Now calculate confidence interval on each proportion, and visualize
library(Hmisc)
par(mfrow = c(3,3))
par(mar = c(4,4,2,1))
par(oma = c(0,0,0,0))
for (i in 1:7){
mytable <- table(mydf[,paste0("hh_size_", i)])
ptable <- prop.table(mytable)
mycis <- simpasym(n = 3000,
p = ptable,
z = 1.96,
cc = TRUE)
bp <- barplot(table(mydf[,paste0("hh_size_",i)])  / 3000,
main = paste0("Household size = ", i),
xlab = "HH member selected",
ylab = "Likelihood of being selected",
ylim = c(0, max(mycis$ub)),
cex.lab = 0.6)
errbar(x = bp[,1],
y = ptable,
yplus = mycis$ub,
yminus = mycis$lb,
add = TRUE,
pch = NA,
errbar.col = adjustcolor("darkred", alpha.f = 0.5)
)
}
par(mfrow = c(1,1))
head(mydf)
paste("Size = 1 | Rep = ",
mydf4$hh_size_1)
paste("Size = 1 | Rep = ",
mydf$hh_size_1)
mydf$hh_size_1 <- paste("Size = 1 | Rep = ",  mydf$hh_size_1)
mydf$hh_size_2 <- paste("Size = 2 | Rep = ",  mydf$hh_size_2)
mydf$hh_size_3 <- paste("Size = 3 | Rep = ",  mydf$hh_size_3)
mydf$hh_size_4 <- paste("Size = 4 | Rep = ",  mydf$hh_size_4)
mydf$hh_size_5 <- paste("Size = 5 | Rep = ",  mydf$hh_size_5)
mydf$hh_size_6 <- paste("Size = 6 | Rep = ",  mydf$hh_size_6)
mydf$hh_size_7 <- paste("Size = 7 | Rep = ",  mydf$hh_size_7)
head(mydf)
setwd("C:/Users/BrewJR/Documents/haiti/household_representatives")
row.names(mydf) <- NULL
write.csv(mydf, "spreadsheet_for_krishna.csv", row.names = FALSE)
